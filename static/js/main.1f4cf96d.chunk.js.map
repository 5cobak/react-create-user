{"version":3,"sources":["pages/Profile/Profile.module.css","components/CreateUser/CreateUser.module.css","components/UsersList/UserList.module.css","pages/Home/Home.module.css","components/Header/Header.module.css","Layout/Layout.module.css","store/actions.js","validate/validate.js","components/CreateUser/CreateUser.js","components/UsersList/UsersList.js","pages/Home/Home.js","pages/Profile/Profile.js","components/Header/Header.js","Layout/Layout.js","store/redusers/usersReducer.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","addUser","createAction","filterGender","changeUserData","validateEmail","email","test","String","toLowerCase","useStyles","makeStyles","theme","button","display","marginTop","spacing","maxWidth","formControl","margin","minWidth","CreateUser","useState","id","fullName","gender","user","setUser","dispatch","useDispatch","materialStyles","clearFrom","emailTouched","fullNameTouched","className","classes","Typography","variant","component","TextField","type","label","onChange","e","value","target","split","join","required","error","FormControl","InputLabel","Select","labelId","native","Button","color","onClick","disabled","UsersList","useSelector","state","users","filteredBy","renderList","index","item","to","style","marginBottom","defaultValue","UserList","map","Home","Container","Profile","match","useRouteMatch","userIndex","currentUser","filter","url","Header","AppBar","header","position","Layout","props","children","usersReducer","createReducer","builder","addCase","action","unshift","payload","console","log","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","store","configureStore","reducer","devTools","process","App","exact","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f4cf96d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3086Q\",\"user\":\"Profile_user__1QRuI\",\"select\":\"Profile_select__1FLND\",\"error\":\"Profile_error__n2llm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateUser\":\"CreateUser_CreateUser__1h95h\",\"error\":\"CreateUser_error__3ZW8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserList\":\"UserList_UserList__1o0d1\",\"item\":\"UserList_item__36S9V\",\"leftToRightAndFade\":\"UserList_leftToRightAndFade__W4JRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__-8pBZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__wP-id\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2Maf_\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addUser = createAction('ADD_USER')\r\nexport const filterGender = createAction('FILTER_GENDER')\r\nexport const changeUserData = createAction('CHANGE_USER_DATA')\r\n\r\n","export function validateEmail(email) {\r\n  var re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n  return re.test(String(email).toLowerCase());\r\n}","import React, { useState } from 'react';\r\nimport {  useDispatch } from 'react-redux'\r\nimport classes from './CreateUser.module.css';\r\nimport { \r\n  makeStyles, FormControl, InputLabel, Select, \r\n  Typography, \r\n  TextField, Button \r\n} from '@material-ui/core';\r\nimport { addUser } from '../../store/actions';\r\nimport { validateEmail } from '../../validate/validate'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n    maxWidth: 200\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 100,\r\n    maxWidth: 100\r\n  },\r\n}))\r\n\r\n\r\nexport function CreateUser () {\r\n  \r\n  const [user, setUser] = useState({\r\n    id: 0,\r\n    email: '',\r\n    fullName: '',\r\n    gender: ''\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const materialStyles = useStyles();\r\n\r\n  const changeEmailHandler = (e) => {\r\n    const valueArr = e.target.value.split(' ');\r\n\r\n    const value = valueArr.join('');\r\n    \r\n    setUser({\r\n      ...user,\r\n      emailTouched: true,\r\n      email: value\r\n    })\r\n\r\n  }\r\n\r\n  const changeFullNameHandler = e => {\r\n    const value = e.target.value\r\n\r\n    setUser({\r\n      ...user,\r\n      fullName: value,\r\n      fullNameTouched: true,\r\n     })\r\n\r\n  }\r\n\r\n  const changeGenderHandler = e => {\r\n    const value = e.target.value\r\n    \r\n    setUser({\r\n      ...user,\r\n      gender: value\r\n    })\r\n  }\r\n\r\n  const isValidUser = () => {\r\n    return validateEmail(user.email) && user.gender && user.fullName \r\n  }\r\n\r\n  const buttonClickHandler = () => {\r\n      setUser({\r\n        ...user,\r\n        id: user.id++\r\n      })\r\n      dispatch(addUser(user));\r\n      clearFrom()\r\n  }\r\n\r\n  const clearFrom = () => {\r\n    setUser({\r\n      ...user,\r\n      email: '',\r\n      fullName: '',\r\n      gender: '',\r\n      emailTouched: false,\r\n      fullNameTouched: false\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.CreateUser} >\r\n        <Typography variant='h2' component='h1'>Создать пользователя</Typography>\r\n        <form>\r\n          <TextField \r\n          type='email' \r\n          id='user-email' \r\n          label='Email' \r\n          variant='outlined' \r\n          margin='normal'\r\n          onChange={changeEmailHandler}\r\n          required\r\n          value={user.email}\r\n          />\r\n          {\r\n            !validateEmail(user.email) && user.emailTouched\r\n            ?\r\n            (<span className={classes.error}>Введите корректный email</span>)\r\n            :\r\n            null\r\n          }\r\n          \r\n          <TextField \r\n          id='user-full-name-id' \r\n          label='ФИО' \r\n          variant='outlined' \r\n          margin='normal'\r\n          onChange={changeFullNameHandler}\r\n          value={user.fullName}\r\n          />\r\n\r\n          <FormControl className={materialStyles.formControl}>\r\n            <InputLabel id=\"user-gender-select-label\">Пол</InputLabel>\r\n            <Select\r\n              labelId=\"user-gender-select-label\"\r\n              id=\"user-gender-select\"\r\n              className={materialStyles.Select}\r\n              onChange={changeGenderHandler}\r\n              value={user.gender}\r\n              native={true}\r\n            >\r\n              <option value=''></option>\r\n              <option value='Мужской'>Мужской</option>\r\n              <option value='Женский'>Женский</option>\r\n            </Select>\r\n          </FormControl>\r\n          \r\n          <Button \r\n            className={materialStyles.button} \r\n            variant=\"outlined\" \r\n            color=\"primary\" \r\n            onClick={buttonClickHandler}\r\n            disabled={!isValidUser()}\r\n          >\r\n            Создать\r\n          </Button>\r\n        </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateUser;","import React from 'react'\r\nimport classes from './UserList.module.css'\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport { Select, FormControl, InputLabel } from '@material-ui/core';\r\nimport { filterGender } from '../../store/actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const UsersList = () => {\r\n  const { users, filteredBy } = useSelector(state => state)\r\n  const dispatch = useDispatch();\r\n\r\n  const selectChangeHandler = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(filterGender(value))\r\n  }\r\n\r\n  const renderList = (user, index) => {\r\n    return (\r\n      <li className={classes.item} key={index}>\r\n        \r\n        <span>Email: {user.email}</span>\r\n        <span>ФИО: {user.fullName}</span>\r\n        <span>Пол: {user.gender}</span>\r\n        <Link to={`/user/:${user.id}`}>Подробнее о пользователе</Link>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormControl style={{minWidth: '200px',marginBottom: '20px'}}>\r\n            <InputLabel id=\"user-gender-filter-label\">Фильтровать по полу</InputLabel>\r\n            <Select\r\n              labelId=\"user-gender-filter-label\"\r\n              id=\"user-gender-filter\"\r\n              native={true}\r\n              onChange={selectChangeHandler}\r\n              defaultValue={filteredBy}\r\n            >\r\n              <option value=''></option>\r\n              <option value='Мужской'>Мужской</option>\r\n              <option value='Женский'>Женский</option>\r\n            </Select>\r\n          </FormControl>\r\n      <ul className={classes.UserList}>\r\n        { users \r\n          ? \r\n          users.map((user, index) => {\r\n            if(user.gender === filteredBy) {\r\n              return renderList(user, index)\r\n            }\r\n            else if(!filteredBy){\r\n              return renderList(user, index)\r\n            }\r\n            return null\r\n          })\r\n          :\r\n          null\r\n      }\r\n        \r\n      </ul>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { CreateUser } from '../../components/CreateUser/CreateUser'\r\nimport classes from './Home.module.css'\r\nimport { UsersList } from '../../components/UsersList/UsersList'\r\nimport { Container } from '@material-ui/core'\r\n\r\nexport const Home = () => {\r\n  return(\r\n    <div className={classes.Home}>\r\n      <Container>\r\n        <CreateUser/>\r\n        <UsersList/>\r\n      </Container>\r\n      \r\n    </div>\r\n    \r\n  )\r\n}","import React, { useState } from 'react'\r\nimport classes from './Profile.module.css'\r\nimport { Container } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useRouteMatch } from 'react-router'\r\nimport { FormControl, InputLabel, Select, TextField, Button, Typography } from '@material-ui/core';\r\nimport { validateEmail } from '../../validate/validate';\r\nimport { changeUserData } from '../../store/actions'\r\nimport {  useDispatch } from 'react-redux'\r\n\r\nexport const Profile = () => {\r\n  const { users } = useSelector(state => state);\r\n  const match = useRouteMatch('/user/:id');\r\n  const dispatch = useDispatch();\r\n\r\n  let userIndex = 0;\r\n  const currentUser = users.filter((user, index)=> {\r\n    if(`/user/:${user.id}` === match.url) {\r\n      userIndex = index\r\n      return true\r\n    }\r\n    return false\r\n  })[0];\r\n  \r\n  \r\n\r\n  const [user, setUser] = useState({...currentUser})\r\n\r\n  const changeEmailHandler = (e) => {\r\n    const valueArr = e.target.value.split(' ');\r\n\r\n    const value = valueArr.join('');\r\n    \r\n    setUser({\r\n      ...user,\r\n      email: value,\r\n      emailTouched: true\r\n    })\r\n\r\n  }\r\n\r\n  const changeFullNameHandler = e => {\r\n    const value = e.target.value\r\n\r\n    setUser({\r\n      ...user,\r\n      fullName: value,\r\n     })\r\n\r\n  }\r\n\r\n  const changeGenderHandler = e => {\r\n    const value = e.target.value\r\n    \r\n    setUser({\r\n      ...user,\r\n      gender: value\r\n    })\r\n  }\r\n\r\n  const isValidUser = () => {\r\n    return validateEmail(user.email) && user.gender && user.fullName \r\n  }\r\n\r\n  const buttonClickHandler = () => {\r\n    dispatch(changeUserData({user, userIndex}));\r\n}\r\n\r\n  return(\r\n    <div className={classes.Profile}>\r\n      <Container>\r\n      <Typography variant='h3' component='h1'>Пользователь</Typography>\r\n        <div className={classes.user}>\r\n          <span>Email: {currentUser.email}</span>\r\n          <span>ФИО: {currentUser.fullName}</span>\r\n          <span>Пол: {currentUser.gender}</span>\r\n        </div>\r\n        <Typography variant='h5' component='h2'>Изменить</Typography>\r\n        <form>\r\n          <TextField \r\n          type='email' \r\n          id='user-email' \r\n          label='Email' \r\n          variant='outlined' \r\n          margin='normal'\r\n          required\r\n          value={user.email}\r\n          onChange={changeEmailHandler}\r\n          />\r\n          {\r\n            !validateEmail(user.email) && user.emailTouched\r\n            ?\r\n            (<span className={classes.error}>Введите корректный email</span>)\r\n            :\r\n            null\r\n          }\r\n          \r\n          <TextField \r\n          id='user-full-name-id' \r\n          label='ФИО' \r\n          variant='outlined' \r\n          margin='normal'\r\n          value={user.fullName}\r\n          onChange={changeFullNameHandler}\r\n          />\r\n\r\n          <FormControl>\r\n            <InputLabel id='user-gender-select-label'>Пол</InputLabel>\r\n            <Select\r\n              labelId='user-gender-select-label'\r\n              id='user-gender-select'\r\n              value={user.gender}\r\n              native={true}\r\n              style={{maxWidth: '150px', marginBottom: '20px'}}\r\n              onChange={changeGenderHandler}\r\n            >\r\n              <option value=''></option>\r\n              <option value='Мужской'>Мужской</option>\r\n              <option value='Женский'>Женский</option>\r\n            </Select>\r\n          </FormControl>\r\n          \r\n          <Button \r\n            variant='outlined' \r\n            color='primary' \r\n            onClick={buttonClickHandler}\r\n            disabled={!isValidUser()}\r\n          >\r\n            Сохранить\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    </div>\r\n    \r\n  )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport ToolBar from '@material-ui/core/Toolbar'\r\nimport Container from '@material-ui/core/Container';\r\nimport classes from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n  return(\r\n      <AppBar className={classes.header} position='static'>\r\n        <Container>\r\n          <ToolBar>\r\n            <Link to={'/'}>\r\n              Главная\r\n            </Link>\r\n          </ToolBar>\r\n        </Container>\r\n      </AppBar>\r\n  )\r\n}","import React from 'react';\r\nimport classes from './Layout.module.css';\r\n\r\nexport const Layout = (props) => <div className={classes.Layout}>{props.children}</div>\r\n\r\nexport default Layout;","import {createReducer} from '@reduxjs/toolkit'\r\n\r\n\r\nconst initialState = {\r\n  users: [\r\n],\r\n  currentUser: null,\r\n  filteredBy: ''\r\n}\r\n\r\nexport const usersReducer = createReducer(initialState, builder => {\r\n  builder\r\n    .addCase('ADD_USER', (state, action) => {\r\n      state.users.unshift(action.payload)\r\n    })\r\n    .addCase('FILTER_GENDER', (state, action)=>{\r\n      state.filteredBy = action.payload\r\n    })\r\n    .addCase('CHANGE_USER_DATA', (state, action)=>{\r\n      console.log(state.users[action.payload.userIndex]);\r\n      \r\n      state.users[action.payload.userIndex] = {\r\n        ...state.users[action.payload.userIndex], \r\n        email: action.payload.user.email || state.users[action.payload.userIndex].email,\r\n        fullName: action.payload.user.fullName || state.users[action.payload.userIndex].fullName,\r\n        gender: action.payload.user.gender || state.users[action.payload.userIndex].gender,\r\n      }\r\n    })\r\n})","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { usersReducer } from './redusers/usersReducer'\r\n\r\nconst middleware = getDefaultMiddleware({\r\n  immutableCheck: false,\r\n  serializableCheck: false,\r\n  thunk: true,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: usersReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { Home } from './pages/Home/Home'\r\nimport { Profile } from './pages/Profile/Profile'\r\nimport { Header } from './components/Header/Header'\r\nimport Layout from './Layout/Layout';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Provider store={store}>\r\n\r\n      <Layout>\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path='/' component={Home}/>\r\n          <Route exact path='/user/:id' component={Profile}/>\r\n        </Switch>\r\n      </Layout>\r\n        \r\n    </Provider>\r\n      \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n    \r\n  </React.StrictMode>,\r\n      \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}